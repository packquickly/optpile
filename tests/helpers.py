import jax.numpy as jnp
import jax.tree_util as jtu
from jaxtyping import Array, PyTree

import optpile as op


def sum_squares(tree: PyTree[Array]):
    mapped = jtu.tree_map(lambda x: jnp.sum(jnp.square(x)), tree)
    return jtu.tree_reduce(lambda x, y: x + y, mapped)


lstsq_problems = [
    op.ARGLINB(),
    op.ARGLINC(),
    op.Bard(),
    op.BDQRTIC(),
    op.Beale(),
    op.BiggsEXP6(),
    op.Booth(),
    op.BoxThreeDim(),
    op.BrownAlmostLinear(),
    op.BrownBadlyScaled(),
    op.BrownDennis(),
    op.BroydenBanded(),
    op.BroydenTridiagonal(),
    op.Chebyquad(),
    op.CoatingThickness(),
    op.CoupledRosenbrock(),
    op.CRAGGLVY(),
    op.CUBE(),
    op.DecoupledRosenbrock(),
    op.DENSCHNB(),
    op.DENSCHNF(),
    op.DeVilliersGlasser2(),
    op.DiscreteBoundary(),
    op.DiscreteIntegral(),
    op.DIXON3DQ(),
    op.EDENSCH(),
    op.ElAttarVidyasagarDutta(),
    op.ExtendedPowellSingular(),
    op.FLETCHCR(),
    op.FreudensteinRoth(),
    op.FullHessian1(),
    op.FullHessian2(),
    op.Gaussian(),
    op.GeneralisedQuartic(),
    op.GENHUMPS(),
    op.GULFRnD(),
    op.HelicalValley(),
    op.JennrichSampson(),
    op.KowalikOsborne(),
    op.LIARWHD(),
    op.LinearFullRank(),
    op.LinearRank1(),
    op.LinearRank1Zero(),
    op.Meyer(),
    op.NODIA(),
    op.NONDQUAR(),
    op.NONSCOMP(),
    op.Osborne1(),
    op.Osborne2(),
    op.PenaltyFunction1(),
    op.PenaltyFunction2(),
    op.PowellBadlyScaled(),
    op.PowellSingular(),
    op.POWER(),
    op.PSC1(),
    op.QUARTC(),
    op.SimpleBowl(),
    op.SINCOS(),
    op.SINQUAD(),
    op.TRIDIA(),
    op.Trigonometric(),
    op.VARDIM(),
    op.VariablyDimensioned(),
    op.Watson(),
    op.WhiteHolst(),
    op.Wood(),
]

min_problems = [
    op.Ackley1(),
    op.Ackley2(),
    op.Ackley3(),
    op.Adjiman(),
    op.Alpine2(),
    op.ARWHEAD(),
    op.Bird(),
    op.Bohachevsky2(),
    op.Bohachevsky3(),
    op.BraninRCOS(),
    op.BraninRCOS2(),
    op.CamelSix(),
    op.CamelThree(),
    op.ChenBird(),
    op.Chichinadze(),
    op.Colville(),
    op.COSINE(),
    op.Csendes(),
    op.CURLY20(),
    op.Damavandi(),
    op.DeckkersAarts(),
    op.Diagonal2(),
    op.Diagonal3(),
    op.Diagonal5(),
    op.Diagonal6(),
    op.Diagonal7(),
    op.Diagonal8(),
    op.Diagonal9(),
    op.DIXMAANA(),
    op.Easom(),
    op.EG2(),
    op.EggHolder(),
    op.ENGVAL1(),
    op.EXPLIN1(),
    op.FLETCBV3(),
    op.FullHessian3(),
    op.Griewank(),
    op.Hager(),
    op.HARKERP2(),
    op.HIMMELBG(),
    op.HIMMELH(),
    op.Hosaki(),
    op.INDEF(),
    op.Keane(),
    op.MCCORMCK(),
    op.Mishra2(),
    op.Mishra4(),
    op.Pathological(),
    op.PenHolder(),
    op.QuadraticQF1(),
    op.QuadraticQF2(),
    op.Raydan1(),
    op.Rump(),
    op.SINE(),
]
